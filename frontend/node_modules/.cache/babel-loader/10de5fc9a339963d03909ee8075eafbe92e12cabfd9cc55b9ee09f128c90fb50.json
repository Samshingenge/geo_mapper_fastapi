{"ast":null,"code":"var _jsxFileName = \"/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/components/MapComponent.tsx\";\nimport React from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in React Leaflet\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Define the style object type\n\n// Define the props that this component will receive from App.tsx\n\nconst MapComponent = ({\n  regions,\n  getRegionStyle,\n  onEachFeature\n}) => {\n  // Function to create popup content\n  const createPopupContent = feature => {\n    if (!(feature !== null && feature !== void 0 && feature.properties)) return 'No data available';\n    const name = feature.properties.name || 'Unnamed Region';\n    const status = feature.properties.fiber_status || 'Unknown';\n    const style = getRegionStyle(feature);\n    return `\n      <div style=\"min-width: 150px;\">\n        <h3 style=\"margin: 0 0 8px 0; font-size: 16px; color: #333; border-bottom: 1px solid #eee; padding-bottom: 4px;\">\n          ${name}\n        </h3>\n        <div style=\"display: flex; align-items: center; margin-top: 4px;\">\n          <span style=\"\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            background-color: ${style.fillColor};\n            margin-right: 6px;\n            border: 1px solid #fff;\n            border-radius: 2px;\n          \"></span>\n          <span>${status}</span>\n        </div>\n      </div>\n    `;\n  };\n\n  // Enhanced onEachFeature function\n  const enhancedOnEachFeature = (feature, layer) => {\n    // Call the parent's onEachFeature\n    onEachFeature(feature, layer);\n\n    // Add popup with region name\n    if (feature.properties) {\n      layer.bindPopup(createPopupContent(feature));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-22, 17],\n    zoom: 6,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    zoomControl: true,\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: regions,\n      style: getRegionStyle,\n      onEachFeature: enhancedOnEachFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","GeoJSON","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","regions","getRegionStyle","onEachFeature","createPopupContent","feature","properties","name","status","fiber_status","style","fillColor","enhancedOnEachFeature","layer","bindPopup","center","zoom","height","width","zoomControl","scrollWheelZoom","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/components/MapComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in React Leaflet\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// Define the style object type\ninterface RegionStyle {\n  fillColor: string;\n  weight: number;\n  opacity: number;\n  color: string;\n  fillOpacity: number;\n  className: string;\n  interactive: boolean;\n  bubblingMouseEvents: boolean;\n}\n\n// Define the props that this component will receive from App.tsx\ninterface MapComponentProps {\n  regions: any[];\n  getRegionStyle: (feature: any) => RegionStyle;\n  onEachFeature: (feature: any, layer: L.Layer) => void;\n}\n\nconst MapComponent: React.FC<MapComponentProps> = ({ regions, getRegionStyle, onEachFeature }) => {\n  // Function to create popup content\n  const createPopupContent = (feature: any) => {\n    if (!feature?.properties) return 'No data available';\n    \n    const name = feature.properties.name || 'Unnamed Region';\n    const status = feature.properties.fiber_status || 'Unknown';\n    const style = getRegionStyle(feature);\n    \n    return `\n      <div style=\"min-width: 150px;\">\n        <h3 style=\"margin: 0 0 8px 0; font-size: 16px; color: #333; border-bottom: 1px solid #eee; padding-bottom: 4px;\">\n          ${name}\n        </h3>\n        <div style=\"display: flex; align-items: center; margin-top: 4px;\">\n          <span style=\"\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            background-color: ${style.fillColor};\n            margin-right: 6px;\n            border: 1px solid #fff;\n            border-radius: 2px;\n          \"></span>\n          <span>${status}</span>\n        </div>\n      </div>\n    `;\n  };\n\n  // Enhanced onEachFeature function\n  const enhancedOnEachFeature = (feature: any, layer: L.Layer) => {\n    // Call the parent's onEachFeature\n    onEachFeature(feature, layer);\n    \n    // Add popup with region name\n    if (feature.properties) {\n      layer.bindPopup(createPopupContent(feature));\n    }\n  };\n\n  return (\n    <MapContainer \n      center={[-22, 17]} \n      zoom={6} \n      style={{ height: '100%', width: '100%' }}\n      zoomControl={true}\n      scrollWheelZoom={true}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <GeoJSON\n        data={regions as any}\n        style={getRegionStyle}\n        onEachFeature={enhancedOnEachFeature}\n      />\n    </MapContainer>\n  );\n};\n\nexport default MapComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAChE,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;;AAEF;;AAYA;;AAOA,MAAMG,YAAyC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC;AAAc,CAAC,KAAK;EAChG;EACA,MAAMC,kBAAkB,GAAIC,OAAY,IAAK;IAC3C,IAAI,EAACA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEC,UAAU,GAAE,OAAO,mBAAmB;IAEpD,MAAMC,IAAI,GAAGF,OAAO,CAACC,UAAU,CAACC,IAAI,IAAI,gBAAgB;IACxD,MAAMC,MAAM,GAAGH,OAAO,CAACC,UAAU,CAACG,YAAY,IAAI,SAAS;IAC3D,MAAMC,KAAK,GAAGR,cAAc,CAACG,OAAO,CAAC;IAErC,OAAO;AACX;AACA;AACA,YAAYE,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgCG,KAAK,CAACC,SAAS;AAC/C;AACA;AACA;AACA;AACA,kBAAkBH,MAAM;AACxB;AACA;AACA,KAAK;EACH,CAAC;;EAED;EACA,MAAMI,qBAAqB,GAAGA,CAACP,OAAY,EAAEQ,KAAc,KAAK;IAC9D;IACAV,aAAa,CAACE,OAAO,EAAEQ,KAAK,CAAC;;IAE7B;IACA,IAAIR,OAAO,CAACC,UAAU,EAAE;MACtBO,KAAK,CAACC,SAAS,CAACV,kBAAkB,CAACC,OAAO,CAAC,CAAC;IAC9C;EACF,CAAC;EAED,oBACEf,OAAA,CAACL,YAAY;IACX8B,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAE;IAClBC,IAAI,EAAE,CAAE;IACRN,KAAK,EAAE;MAAEO,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IACzCC,WAAW,EAAE,IAAK;IAClBC,eAAe,EAAE,IAAK;IAAAC,QAAA,gBAEtB/B,OAAA,CAACJ,SAAS;MACRoC,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACFrC,OAAA,CAACH,OAAO;MACNyC,IAAI,EAAE3B,OAAe;MACrBS,KAAK,EAAER,cAAe;MACtBC,aAAa,EAAES;IAAsB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACE,EAAA,GA5DI7B,YAAyC;AA8D/C,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}