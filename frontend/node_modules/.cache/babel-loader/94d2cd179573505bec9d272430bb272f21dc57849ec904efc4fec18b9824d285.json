{"ast":null,"code":"var _jsxFileName = \"/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MapComponent from './components/MapComponent'; // Import your map component\nimport './App.css'; // Your main app styles\n\n// Define the shape of a region's properties for clarity\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch regions data from the API when the component mounts\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        // Use the full URL for your backend\n        const response = await axios.get('http://localhost:8000/api/v1/regions/geojson');\n        setRegions(response.data.features);\n      } catch (err) {\n        console.error('Error fetching regions:', err);\n        setError('Failed to load region data. Please check the backend connection.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRegions();\n  }, []); // The empty array [] means this effect runs only once\n\n  // Function to get color based on fiber status\n  const getStatusColor = status => {\n    if (!status) return '#9E9E9E'; // Grey for unknown status\n\n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'active':\n        return '#4CAF50';\n      // Green\n      case 'planned':\n        return '#FFC107';\n      // Yellow/Orange\n      case 'unavailable':\n        return '#F44336';\n      // Red\n      default:\n        return '#9E9E9E';\n    }\n  };\n\n  // Function to define the style for each GeoJSON feature\n  const getRegionStyle = feature => {\n    return {\n      fillColor: getStatusColor(feature.properties.fiber_status),\n      weight: 1.5,\n      opacity: 1,\n      color: 'white',\n      fillOpacity: 0.7\n    };\n  };\n\n  // Function to handle click events on each region\n  const onEachFeature = (feature, layer) => {\n    layer.on({\n      click: () => {\n        setSelectedRegion(feature.properties);\n      },\n      mouseover: event => {\n        // Optional: Highlight on hover\n        event.target.setStyle({\n          fillOpacity: 0.9\n        });\n      },\n      mouseout: event => {\n        // Optional: Reset highlight\n        event.target.setStyle({\n          fillOpacity: 0.7\n        });\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-message\",\n      children: \"Loading map data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Namibia Fiber Coverage Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualizing fiber optic coverage across regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapComponent, {\n          regions: regions,\n          getRegionStyle: getRegionStyle,\n          onEachFeature: onEachFeature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebar-title\",\n          children: \"Region Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), selectedRegion ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedRegion.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 18\n            }, this), \" \", selectedRegion.fiber_status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), selectedRegion.population && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Population:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 20\n            }, this), \" \", selectedRegion.population.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), selectedRegion.area_km2 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Area:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 20\n            }, this), \" \", selectedRegion.area_km2.toLocaleString(), \" km\\xB2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-placeholder\",\n          children: \"Click on a region on the map to see details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Legend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: '#4CAF50'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 5\n            }, this), \" Active\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: '#FFC107'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 5\n            }, this), \" Planned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: '#F44336'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 5\n            }, this), \" Unavailable\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Namibia Fiber Coverage Mapper \", new Date().getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"smkomhHEn6zjXHE3jM9dkqaJG6c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapComponent","jsxDEV","_jsxDEV","App","_s","regions","setRegions","selectedRegion","setSelectedRegion","loading","setLoading","error","setError","fetchRegions","response","get","data","features","err","console","getStatusColor","status","statusLower","toLowerCase","getRegionStyle","feature","fillColor","properties","fiber_status","weight","opacity","color","fillOpacity","onEachFeature","layer","on","click","mouseover","event","target","setStyle","mouseout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","population","toLocaleString","area_km2","style","backgroundColor","Date","getFullYear","_c","$RefreshReg$"],"sources":["/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\n\nimport MapComponent from './components/MapComponent'; // Import your map component\nimport './App.css'; // Your main app styles\n\n// Define the shape of a region's properties for clarity\ntype RegionProperties = {\n  id: number;\n  name: string;\n  fiber_status: 'Active' | 'Planned' | 'Unavailable' | string;\n  population?: number;\n  area_km2?: number;\n};\n\nconst App: React.FC = () => {\n  const [regions, setRegions] = useState<any[]>([]);\n  const [selectedRegion, setSelectedRegion] = useState<RegionProperties | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch regions data from the API when the component mounts\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        // Use the full URL for your backend\n        const response = await axios.get('http://localhost:8000/api/v1/regions/geojson');\n        setRegions(response.data.features);\n      } catch (err) {\n        console.error('Error fetching regions:', err);\n        setError('Failed to load region data. Please check the backend connection.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRegions();\n  }, []); // The empty array [] means this effect runs only once\n\n  // Function to get color based on fiber status\n  const getStatusColor = (status: string | undefined): string => {\n    if (!status) return '#9E9E9E'; // Grey for unknown status\n    \n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'active':\n        return '#4CAF50'; // Green\n      case 'planned':\n        return '#FFC107'; // Yellow/Orange\n      case 'unavailable':\n        return '#F44336'; // Red\n      default:\n        return '#9E9E9E';\n    }\n  };\n\n  // Function to define the style for each GeoJSON feature\n  const getRegionStyle = (feature: any) => {\n    return {\n      fillColor: getStatusColor(feature.properties.fiber_status),\n      weight: 1.5,\n      opacity: 1,\n      color: 'white',\n      fillOpacity: 0.7,\n    };\n  };\n\n  // Function to handle click events on each region\n  const onEachFeature = (feature: any, layer: L.Layer) => {\n    layer.on({\n      click: () => {\n        setSelectedRegion(feature.properties);\n      },\n      mouseover: (event) => { // Optional: Highlight on hover\n        event.target.setStyle({\n          fillOpacity: 0.9,\n        });\n      },\n      mouseout: (event) => { // Optional: Reset highlight\n        event.target.setStyle({\n          fillOpacity: 0.7,\n        });\n      },\n    });\n  };\n\n  if (loading) {\n    return <div className=\"state-message\">Loading map data...</div>;\n  }\n\n  if (error) {\n    return <div className=\"state-message error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Namibia Fiber Coverage Map</h1>\n        <p>Visualizing fiber optic coverage across regions</p>\n      </header>\n\n      <div className=\"app-content\">\n        <div className=\"map-container\">\n          <MapComponent\n            regions={regions}\n            getRegionStyle={getRegionStyle}\n            onEachFeature={onEachFeature}\n          />\n        </div>\n\n        <div className=\"sidebar\">\n          <h2 className=\"sidebar-title\">Region Information</h2>\n          {selectedRegion ? (\n            <div className=\"sidebar-content\">\n              <h3>{selectedRegion.name}</h3>\n              <p><strong>Status:</strong> {selectedRegion.fiber_status}</p>\n              {selectedRegion.population && (\n                <p><strong>Population:</strong> {selectedRegion.population.toLocaleString()}</p>\n              )}\n              {selectedRegion.area_km2 && (\n                <p><strong>Area:</strong> {selectedRegion.area_km2.toLocaleString()} km²</p>\n              )}\n            </div>\n          ) : (\n            <div className=\"sidebar-placeholder\">\n              Click on a region on the map to see details.\n            </div>\n          )}\n\n<div className=\"legend\">\n  <h3>Legend</h3>\n  <div>\n    <span className=\"legend-color\" style={{ backgroundColor: '#4CAF50' }}></span> Active\n  </div>\n  <div>\n    <span className=\"legend-color\" style={{ backgroundColor: '#FFC107' }}></span> Planned\n  </div>\n  <div>\n    <span className=\"legend-color\" style={{ backgroundColor: '#F44336' }}></span> Unavailable\n  </div>\n</div>\n        </div>\n      </div>\n\n      <footer className=\"app-footer\">\n        <p>Namibia Fiber Coverage Mapper {new Date().getFullYear()}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}