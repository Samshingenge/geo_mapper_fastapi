{"ast":null,"code":"var _jsxFileName = \"/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\n\n// Fix for default marker icons in React Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Types\n\nconst App = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapReady, setMapReady] = useState(false);\n\n  // Default center and zoom for Namibia\n  const center = [-22, 17];\n  const zoom = 6;\n\n  // Fix for map not displaying properly\n  useEffect(() => {\n    setMapReady(true);\n  }, []);\n\n  // Fetch regions data from the API\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('/api/v1/regions/geojson');\n        setRegions(response.data.features);\n      } catch (err) {\n        console.error('Error fetching regions:', err);\n        setError('Failed to load region data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRegions();\n  }, []);\n\n  // Style for GeoJSON features based on fiber status\n  const getRegionStyle = feature => {\n    var _feature$properties$f;\n    if (!feature || !feature.properties) {\n      return {\n        fillColor: '#e0e0e0',\n        weight: 1,\n        opacity: 1,\n        color: '#ffffff',\n        fillOpacity: 0.7\n      };\n    }\n    const status = ((_feature$properties$f = feature.properties.fiber_status) === null || _feature$properties$f === void 0 ? void 0 : _feature$properties$f.toLowerCase()) || 'unavailable';\n    let fillColor = '#e0e0e0'; // Default color (light gray)\n\n    switch (status) {\n      case 'active':\n        fillColor = '#4CAF50'; // Green\n        break;\n      case 'planned':\n        fillColor = '#FFC107'; // Yellow\n        break;\n      case 'unavailable':\n      default:\n        fillColor = '#F44336'; // Red\n        break;\n    }\n    return {\n      fillColor: fillColor,\n      weight: 1,\n      opacity: 1,\n      color: '#ffffff',\n      fillOpacity: 0.7,\n      className: 'region-polygon'\n    };\n  };\n\n  // Handle region click\n  const handleRegionClick = feature => {\n    if (!(feature !== null && feature !== void 0 && feature.properties)) {\n      setSelectedRegion(null);\n      return;\n    }\n    const {\n      id,\n      name,\n      fiber_status,\n      ...properties\n    } = feature.properties;\n    const regionData = {\n      id: id || undefined,\n      name: name || 'Unknown Region',\n      fiber_status: fiber_status || 'Unavailable',\n      properties: properties\n    };\n    setSelectedRegion(regionData);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-semibold\",\n        children: \"Loading map data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-semibold text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Namibia Fiber Coverage Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Visualizing fiber optic coverage across regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 'calc(100vh - 200px)',\n          width: '100%',\n          position: 'relative'\n        },\n        children: !mapReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xl font-semibold\",\n            children: \"Initializing map...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: center,\n          zoom: zoom,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          zoomControl: true,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), regions.map((region, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: region,\n            style: getRegionStyle(region),\n            eventHandlers: {\n              click: () => handleRegionClick(region)\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-bold\",\n                  children: region.properties.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", region.properties.fiber_status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 bg-white border-r border-gray-200 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Region Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), selectedRegion ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-2\",\n            children: selectedRegion.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block px-2 py-1 text-sm font-medium rounded-full mb-2\",\n              style: {\n                backgroundColor: selectedRegion.fiber_status === 'Active' ? '#4CAF50' : selectedRegion.fiber_status === 'Planned' ? '#FFC107' : '#F44336',\n                color: 'white'\n              },\n              children: selectedRegion.fiber_status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [selectedRegion.properties.population && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Population:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 22\n              }, this), \" \", selectedRegion.properties.population.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), selectedRegion.properties.area_km2 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Area:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 22\n              }, this), \" \", selectedRegion.properties.area_km2.toLocaleString(), \" km\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"Click on a region to see details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: \"Legend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 bg-green-500 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Active Coverage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 bg-yellow-400 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Planned Coverage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 bg-red-500 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Coverage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Namibia Fiber Coverage Mapper \", new Date().getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xLpZ4CHJiJNISCt+Jmmjfx6s1MQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","GeoJSON","Popup","L","axios","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","App","_s","regions","setRegions","selectedRegion","setSelectedRegion","loading","setLoading","error","setError","mapReady","setMapReady","center","zoom","fetchRegions","response","get","data","features","err","console","getRegionStyle","feature","_feature$properties$f","properties","fillColor","weight","opacity","color","fillOpacity","status","fiber_status","toLowerCase","className","handleRegionClick","id","name","regionData","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","position","zoomControl","url","attribution","map","region","index","eventHandlers","click","backgroundColor","population","toLocaleString","area_km2","Date","getFullYear","_c","$RefreshReg$"],"sources":["/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\n\n// Fix for default marker icons in React Leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// Types\ntype Region = {\n  id?: number;\n  name: string;\n  fiber_status: 'Active' | 'Planned' | 'Unavailable' | string;\n  properties: Record<string, any>;\n};\n\ninterface GeoJSONFeature {\n  type: 'Feature';\n  properties: Region;\n  geometry: {\n    type: string;\n    coordinates: number[][][] | number[][][][];\n  };\n}\n\nconst App: React.FC = () => {\n  const [regions, setRegions] = useState<GeoJSONFeature[]>([]);\n  const [selectedRegion, setSelectedRegion] = useState<Region | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [mapReady, setMapReady] = useState(false);\n\n  // Default center and zoom for Namibia\n  const center: [number, number] = [-22, 17];\n  const zoom = 6;\n\n  // Fix for map not displaying properly\n  useEffect(() => {\n    setMapReady(true);\n  }, []);\n\n  // Fetch regions data from the API\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('/api/v1/regions/geojson');\n        setRegions(response.data.features);\n      } catch (err) {\n        console.error('Error fetching regions:', err);\n        setError('Failed to load region data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRegions();\n  }, []);\n\n  // Style for GeoJSON features based on fiber status\n  const getRegionStyle = (feature: any) => {\n    if (!feature || !feature.properties) {\n      return {\n        fillColor: '#e0e0e0',\n        weight: 1,\n        opacity: 1,\n        color: '#ffffff',\n        fillOpacity: 0.7\n      };\n    }\n    \n    const status = feature.properties.fiber_status?.toLowerCase() || 'unavailable';\n    let fillColor = '#e0e0e0'; // Default color (light gray)\n    \n    switch (status) {\n      case 'active':\n        fillColor = '#4CAF50'; // Green\n        break;\n      case 'planned':\n        fillColor = '#FFC107'; // Yellow\n        break;\n      case 'unavailable':\n      default:\n        fillColor = '#F44336'; // Red\n        break;\n    }\n\n    return {\n      fillColor: fillColor,\n      weight: 1,\n      opacity: 1,\n      color: '#ffffff',\n      fillOpacity: 0.7,\n      className: 'region-polygon'\n    };\n  };\n\n  // Handle region click\n  const handleRegionClick = (feature: GeoJSONFeature) => {\n    if (!feature?.properties) {\n      setSelectedRegion(null);\n      return;\n    }\n  \n    const { id, name, fiber_status, ...properties } = feature.properties;\n    \n    const regionData: Region = {\n      id: id || undefined,\n      name: name || 'Unknown Region',\n      fiber_status: (fiber_status as 'Active' | 'Planned' | 'Unavailable') || 'Unavailable',\n      properties: properties\n    };\n    \n    setSelectedRegion(regionData);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-xl font-semibold\">Loading map data...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-xl font-semibold text-red-600\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Namibia Fiber Coverage Map</h1>\n        <p className=\"subtitle\">Visualizing fiber optic coverage across regions</p>\n      </header>\n      <main>\n        <div style={{ height: 'calc(100vh - 200px)', width: '100%', position: 'relative' }}>\n          {!mapReady ? (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-xl font-semibold\">Initializing map...</div>\n            </div>\n          ) : (\n            <MapContainer \n              center={center} \n              zoom={zoom} \n              style={{ height: '100%', width: '100%' }}\n              zoomControl={true}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              {regions.map((region, index) => (\n                <GeoJSON\n                  key={index}\n                  data={region as any}\n                  style={getRegionStyle(region)}\n                  eventHandlers={{\n                    click: () => handleRegionClick(region)\n                  }}\n                >\n                  <Popup>\n                    <div>\n                      <h3 className=\"font-bold\">{region.properties.name}</h3>\n                      <p>Status: {region.properties.fiber_status}</p>\n                    </div>\n                  </Popup>\n                </GeoJSON>\n              ))}\n            </MapContainer>\n          )}\n        </div>\n        {/* Sidebar */}\n        <div className=\"w-80 bg-white border-r border-gray-200 p-4 overflow-y-auto\">\n          <h2 className=\"text-lg font-semibold mb-4\">Region Information</h2>\n          \n          {selectedRegion ? (\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"text-xl font-bold mb-2\">{selectedRegion.name}</h3>\n              \n              <div className=\"mb-3\">\n                <span className=\"inline-block px-2 py-1 text-sm font-medium rounded-full mb-2\"\n                  style={{\n                    backgroundColor: \n                      selectedRegion.fiber_status === 'Active' ? '#4CAF50' :\n                      selectedRegion.fiber_status === 'Planned' ? '#FFC107' : '#F44336',\n                    color: 'white'\n                  }}>\n                  {selectedRegion.fiber_status}\n                </span>\n              </div>\n              \n              <div className=\"space-y-2\">\n                {selectedRegion.properties.population && (\n                  <p><span className=\"font-medium\">Population:</span> {selectedRegion.properties.population.toLocaleString()}</p>\n                )}\n                {selectedRegion.properties.area_km2 && (\n                  <p><span className=\"font-medium\">Area:</span> {selectedRegion.properties.area_km2.toLocaleString()} km²</p>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-gray-500 italic\">\n              Click on a region to see details\n            </div>\n          )}\n\n          <div className=\"mt-6\">\n            <h3 className=\"font-semibold mb-2\">Legend</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center\">\n                <div className=\"w-4 h-4 bg-green-500 mr-2\"></div>\n                <span>Active Coverage</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-4 h-4 bg-yellow-400 mr-2\"></div>\n                <span>Planned Coverage</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-4 h-4 bg-red-500 mr-2\"></div>\n                <span>No Coverage</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      <footer className=\"app-footer\">\n        <p> Namibia Fiber Coverage Mapper {new Date().getFullYear()}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}