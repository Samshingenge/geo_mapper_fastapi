{"ast":null,"code":"var _jsxFileName = \"/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/components/MapComponent.tsx\";\nimport React from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport polylabel from 'polylabel';\n\n// Define manual center coordinates for problematic regions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst manualCenters = {\n  'Kunene': [-19.0, 14.0],\n  'Oshana': [-18.0, 15.7],\n  'Oshikoto': [-18.5, 16.5],\n  'Omaheke': [-22.0, 19.5],\n  'Zambezi': [-17.8, 24.0]\n};\n\n// Fix for default marker icons in React Leaflet\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Define the props that this component will receive from App.tsx\n\nconst MapComponent = ({\n  regions,\n  getRegionStyle,\n  onFeatureClick\n}) => {\n  // Function to calculate the visual center of a GeoJSON feature\n  const getCenter = feature => {\n    const regionName = feature.properties.name;\n\n    // Use manual center if available, otherwise calculate it\n    if (manualCenters[regionName]) {\n      return manualCenters[regionName];\n    }\n\n    // polylabel expects an array of polygons\n    const polygon = feature.geometry.coordinates;\n\n    // Find the pole of inaccessibility, which is the visual center\n    const center = polylabel(polygon, 1.0);\n    return [center[1], center[0]]; // Leaflet expects [lat, lng]\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-22, 17],\n    zoom: 6,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), regions.map((region, index) => {\n      const center = getCenter(region);\n      const style = getRegionStyle(region);\n      const {\n        name,\n        fiber_status,\n        population,\n        area_km2\n      } = region.properties;\n      return /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: center,\n        pathOptions: style,\n        radius: 10,\n        eventHandlers: {\n          click: () => onFeatureClick(region)\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: 0,\n                paddingBottom: '0.5rem',\n                borderBottom: '1px solid #eee'\n              },\n              children: name || 'Unnamed Region'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 20\n              }, this), \" \", fiber_status || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), population && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Population:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 35\n              }, this), \" \", population.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 32\n            }, this), area_km2 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Area:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), \" \", area_km2.toLocaleString(), \" km\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","CircleMarker","Popup","L","polylabel","jsxDEV","_jsxDEV","manualCenters","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","require","iconRetinaUrl","shadowUrl","MapComponent","regions","getRegionStyle","onFeatureClick","getCenter","feature","regionName","properties","name","polygon","geometry","coordinates","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","region","index","fiber_status","population","area_km2","pathOptions","radius","eventHandlers","click","margin","paddingBottom","borderBottom","toLocaleString","_c","$RefreshReg$"],"sources":["/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/components/MapComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { RegionFeature } from '../services/api';\nimport polylabel from 'polylabel';\n\n// Define manual center coordinates for problematic regions\nconst manualCenters: { [key: string]: L.LatLngTuple } = {\n  'Kunene': [-19.0, 14.0],\n  'Oshana': [-18.0, 15.7],\n  'Oshikoto': [-18.5, 16.5],\n  'Omaheke': [-22.0, 19.5],\n  'Zambezi': [-17.8, 24.0]\n};\n\n// Fix for default marker icons in React Leaflet\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// Define the props that this component will receive from App.tsx\ninterface MapComponentProps {\n  regions: RegionFeature[];\n  getRegionStyle: (feature: RegionFeature) => object;\n  onFeatureClick: (feature: RegionFeature) => void;\n}\n\nconst MapComponent: React.FC<MapComponentProps> = ({ regions, getRegionStyle, onFeatureClick }) => {\n  // Function to calculate the visual center of a GeoJSON feature\n  const getCenter = (feature: RegionFeature): L.LatLngTuple => {\n    const regionName = feature.properties.name;\n\n    // Use manual center if available, otherwise calculate it\n    if (manualCenters[regionName]) {\n      return manualCenters[regionName];\n    }\n\n    // polylabel expects an array of polygons\n    const polygon = feature.geometry.coordinates;\n\n    // Find the pole of inaccessibility, which is the visual center\n    const center = polylabel(polygon, 1.0);\n    return [center[1], center[0]]; // Leaflet expects [lat, lng]\n  };\n\n  return (\n    <MapContainer center={[-22, 17]} zoom={6} style={{ height: '100%', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {regions.map((region, index) => {\n        const center = getCenter(region);\n        const style = getRegionStyle(region);\n        const { name, fiber_status, population, area_km2 } = region.properties;\n\n        return (\n          <CircleMarker\n            key={index}\n            center={center}\n            pathOptions={style}\n            radius={10}\n            eventHandlers={{\n              click: () => onFeatureClick(region),\n            }}\n          >\n            <Popup>\n              <div>\n                <h3 style={{ margin: 0, paddingBottom: '0.5rem', borderBottom: '1px solid #eee' }}>{name || 'Unnamed Region'}</h3>\n                <p><strong>Status:</strong> {fiber_status || 'N/A'}</p>\n                {population && <p><strong>Population:</strong> {population.toLocaleString()}</p>}\n                {area_km2 && <p><strong>Area:</strong> {area_km2.toLocaleString()} kmÂ²</p>}\n              </div>\n            </Popup>\n          </CircleMarker>\n        );\n      })}\n    </MapContainer>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}