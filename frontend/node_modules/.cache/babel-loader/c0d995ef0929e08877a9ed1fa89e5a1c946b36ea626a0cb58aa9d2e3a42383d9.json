{"ast":null,"code":"var _jsxFileName = \"/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/components/MapComponent.tsx\";\nimport React from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in React Leaflet\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Define the props that this component will receive from App.tsx\n\nconst MapComponent = ({\n  regions,\n  getRegionStyle,\n  onFeatureClick,\n  createPopupContent\n}) => {\n  // Function to calculate the center of a GeoJSON feature\n  const getCenter = feature => {\n    return L.geoJSON(feature).getBounds().getCenter();\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [-22, 17],\n    zoom: 6,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), regions.map((region, index) => {\n      const center = getCenter(region);\n      const style = getRegionStyle(region);\n      const popupContent = createPopupContent(region);\n      return /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: center,\n        pathOptions: style,\n        radius: 10,\n        eventHandlers: {\n          click: () => onFeatureClick(region)\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: popupContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","CircleMarker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","require","iconRetinaUrl","shadowUrl","MapComponent","regions","getRegionStyle","onFeatureClick","createPopupContent","getCenter","feature","geoJSON","getBounds","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","region","index","popupContent","pathOptions","radius","eventHandlers","click","_c","$RefreshReg$"],"sources":["/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/components/MapComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in React Leaflet\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// Define the props that this component will receive from App.tsx\ninterface MapComponentProps {\n  regions: any[];\n  getRegionStyle: (feature: any) => object;\n  onFeatureClick: (feature: any) => void;\n  createPopupContent: (feature: any) => string;\n}\n\nconst MapComponent: React.FC<MapComponentProps> = ({ regions, getRegionStyle, onFeatureClick, createPopupContent }) => {\n  // Function to calculate the center of a GeoJSON feature\n  const getCenter = (feature: any) => {\n    return L.geoJSON(feature).getBounds().getCenter();\n  };\n\n  return (\n    <MapContainer center={[-22, 17]} zoom={6} style={{ height: '100%', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {regions.map((region, index) => {\n        const center = getCenter(region);\n        const style = getRegionStyle(region);\n        const popupContent = createPopupContent(region);\n\n        return (\n          <CircleMarker\n            key={index}\n            center={center}\n            pathOptions={style}\n            radius={10}\n            eventHandlers={{\n              click: () => onFeatureClick(region),\n            }}\n          >\n            <Popup>{popupContent}</Popup>\n          </CircleMarker>\n        );\n      })}\n    </MapContainer>\n  );\n};\n\nexport default MapComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,KAAK,QAAQ,eAAe;AAC5E,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAAC,qCAAqC,CAAC;EACvDC,aAAa,EAAED,OAAO,CAAC,wCAAwC,CAAC;EAChEE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;;AAEF;;AAQA,MAAMG,YAAyC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAmB,CAAC,KAAK;EACrH;EACA,MAAMC,SAAS,GAAIC,OAAY,IAAK;IAClC,OAAOlB,CAAC,CAACmB,OAAO,CAACD,OAAO,CAAC,CAACE,SAAS,CAAC,CAAC,CAACH,SAAS,CAAC,CAAC;EACnD,CAAC;EAED,oBACEf,OAAA,CAACN,YAAY;IAACyB,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAE;IAACC,IAAI,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjFxB,OAAA,CAACL,SAAS;MACR8B,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,EACDnB,OAAO,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAC9B,MAAMd,MAAM,GAAGJ,SAAS,CAACiB,MAAM,CAAC;MAChC,MAAMX,KAAK,GAAGT,cAAc,CAACoB,MAAM,CAAC;MACpC,MAAME,YAAY,GAAGpB,kBAAkB,CAACkB,MAAM,CAAC;MAE/C,oBACEhC,OAAA,CAACJ,YAAY;QAEXuB,MAAM,EAAEA,MAAO;QACfgB,WAAW,EAAEd,KAAM;QACnBe,MAAM,EAAE,EAAG;QACXC,aAAa,EAAE;UACbC,KAAK,EAAEA,CAAA,KAAMzB,cAAc,CAACmB,MAAM;QACpC,CAAE;QAAAR,QAAA,eAEFxB,OAAA,CAACH,KAAK;UAAA2B,QAAA,EAAEU;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,GARxBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASE,CAAC;IAEnB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACS,EAAA,GAjCI7B,YAAyC;AAmC/C,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}