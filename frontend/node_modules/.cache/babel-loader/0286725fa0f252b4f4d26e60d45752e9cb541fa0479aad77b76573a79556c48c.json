{"ast":null,"code":"var _jsxFileName = \"/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MapComponent from './components/MapComponent'; // Import your map component\nimport './App.css'; // Your main app styles\n\n// Define the shape of a region's properties for clarity\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch regions data from the API when the component mounts\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        // Use the full URL for your backend\n        const response = await axios.get('http://localhost:8000/api/v1/regions/geojson');\n        setRegions(response.data.features);\n      } catch (err) {\n        console.error('Error fetching regions:', err);\n        setError('Failed to load region data. Please check the backend connection.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRegions();\n  }, []); // The empty array [] means this effect runs only once\n\n  // Function to get color based on fiber status\n  const getStatusColor = status => {\n    if (!status) return '#9E9E9E'; // Grey for unknown status\n\n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'active':\n        return '#4CAF50';\n      // Green\n      case 'planned':\n        return '#FFC107';\n      // Yellow/Orange\n      case 'unavailable':\n        return '#F44336';\n      // Red\n      default:\n        return '#9E9E9E';\n    }\n  };\n\n  // Function to define the style for each GeoJSON feature\n  const getRegionStyle = feature => {\n    var _feature$properties;\n    return {\n      fillColor: getStatusColor(feature === null || feature === void 0 ? void 0 : (_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.fiber_status) || '#9E9E9E',\n      weight: 0.5,\n      // Thinner border\n      opacity: 1,\n      color: '#ffffff',\n      // White border\n      fillOpacity: 0.7,\n      className: 'region-polygon',\n      interactive: true,\n      bubblingMouseEvents: true\n    };\n  };\n\n  // Function to handle click events on each region\n  // In frontend/src/App.tsx\n\n  const onEachFeature = (feature, layer) => {\n    if (feature.properties) {\n      // Directly access properties from the feature and provide a fallback\n      const regionName = feature.properties.name || \"Unnamed Region\";\n      const regionStatus = feature.properties.fiber_status || \"N/A\";\n      const popupContent = `\n      <div>\n        <h3>${regionName}</h3>\n        <p><strong>Status:</strong> ${regionStatus}</p>\n      </div>\n    `;\n      layer.bindPopup(popupContent);\n    }\n    layer.on({\n      click: () => {\n        setSelectedRegion(feature.properties);\n      },\n      mouseover: event => {\n        event.target.setStyle({\n          fillOpacity: 0.9\n        });\n      },\n      mouseout: event => {\n        event.target.setStyle({\n          fillOpacity: 0.7\n        });\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-message\",\n      children: \"Loading map data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Namibia Fiber Coverage Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Visualizing fiber optic coverage across regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapComponent, {\n          regions: regions,\n          getRegionStyle: getRegionStyle,\n          onEachFeature: onEachFeature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebar-title\",\n          children: \"Region Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), selectedRegion ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedRegion.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 18\n            }, this), \" \", selectedRegion.fiber_status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), selectedRegion.population && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Population:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 20\n            }, this), \" \", selectedRegion.population.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), selectedRegion.area_km2 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Area:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 20\n            }, this), \" \", selectedRegion.area_km2.toLocaleString(), \" km\\xB2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-placeholder\",\n          children: \"Click on a region on the map to see details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Legend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: '#4CAF50'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 5\n            }, this), \" Active\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: '#FFC107'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 5\n            }, this), \" Planned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: '#F44336'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 5\n            }, this), \" Unavailable\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Namibia Fiber Coverage Mapper \", new Date().getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"smkomhHEn6zjXHE3jM9dkqaJG6c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapComponent","jsxDEV","_jsxDEV","App","_s","regions","setRegions","selectedRegion","setSelectedRegion","loading","setLoading","error","setError","fetchRegions","response","get","data","features","err","console","getStatusColor","status","statusLower","toLowerCase","getRegionStyle","feature","_feature$properties","fillColor","properties","fiber_status","weight","opacity","color","fillOpacity","className","interactive","bubblingMouseEvents","onEachFeature","layer","regionName","name","regionStatus","popupContent","bindPopup","on","click","mouseover","event","target","setStyle","mouseout","children","fileName","_jsxFileName","lineNumber","columnNumber","population","toLocaleString","area_km2","style","backgroundColor","Date","getFullYear","_c","$RefreshReg$"],"sources":["/home/sammycode/Documents/nam_geo_cov_mapper/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\n\nimport MapComponent from './components/MapComponent'; // Import your map component\nimport './App.css'; // Your main app styles\n\n// Define the shape of a region's properties for clarity\ntype RegionProperties = {\n  id: number;\n  name: string;\n  fiber_status: 'Active' | 'Planned' | 'Unavailable' | string;\n  population?: number;\n  area_km2?: number;\n};\n\ninterface RegionStyle {\n  fillColor: string;\n  weight: number;\n  opacity: number;\n  color: string;\n  fillOpacity: number;\n  className: string;\n  interactive: boolean;\n  bubblingMouseEvents: boolean;\n}\n\nconst App: React.FC = () => {\n  const [regions, setRegions] = useState<any[]>([]);\n  const [selectedRegion, setSelectedRegion] = useState<RegionProperties | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch regions data from the API when the component mounts\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        // Use the full URL for your backend\n        const response = await axios.get('http://localhost:8000/api/v1/regions/geojson');\n        setRegions(response.data.features);\n      } catch (err) {\n        console.error('Error fetching regions:', err);\n        setError('Failed to load region data. Please check the backend connection.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRegions();\n  }, []); // The empty array [] means this effect runs only once\n\n  // Function to get color based on fiber status\n  const getStatusColor = (status: string | undefined): string => {\n    if (!status) return '#9E9E9E'; // Grey for unknown status\n    \n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'active':\n        return '#4CAF50'; // Green\n      case 'planned':\n        return '#FFC107'; // Yellow/Orange\n      case 'unavailable':\n        return '#F44336'; // Red\n      default:\n        return '#9E9E9E';\n    }\n  };\n\n  // Function to define the style for each GeoJSON feature\n  const getRegionStyle = (feature: any): RegionStyle => {\n    return {\n      fillColor: getStatusColor(feature?.properties?.fiber_status) || '#9E9E9E',\n      weight: 0.5,  // Thinner border\n      opacity: 1,\n      color: '#ffffff',  // White border\n      fillOpacity: 0.7,\n      className: 'region-polygon',\n      interactive: true,\n      bubblingMouseEvents: true\n    };\n  };\n\n  // Function to handle click events on each region\n // In frontend/src/App.tsx\n\n const onEachFeature = (feature: any, layer: L.Layer) => {\n  if (feature.properties) {\n    // Directly access properties from the feature and provide a fallback\n    const regionName = feature.properties.name || \"Unnamed Region\";\n    const regionStatus = feature.properties.fiber_status || \"N/A\";\n\n    const popupContent = `\n      <div>\n        <h3>${regionName}</h3>\n        <p><strong>Status:</strong> ${regionStatus}</p>\n      </div>\n    `;\n    layer.bindPopup(popupContent);\n  }\n\n  layer.on({\n    click: () => {\n      setSelectedRegion(feature.properties);\n    },\n    mouseover: (event) => {\n      event.target.setStyle({ fillOpacity: 0.9 });\n    },\n    mouseout: (event) => {\n      event.target.setStyle({ fillOpacity: 0.7 });\n    },\n  });\n};\n\n  if (loading) {\n    return <div className=\"state-message\">Loading map data...</div>;\n  }\n\n  if (error) {\n    return <div className=\"state-message error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Namibia Fiber Coverage Map</h1>\n        <p>Visualizing fiber optic coverage across regions</p>\n      </header>\n\n      <div className=\"app-content\">\n        <div className=\"map-container\">\n          <MapComponent\n            regions={regions}\n            getRegionStyle={getRegionStyle}\n            onEachFeature={onEachFeature}\n          />\n        </div>\n\n        <div className=\"sidebar\">\n          <h2 className=\"sidebar-title\">Region Information</h2>\n          {selectedRegion ? (\n            <div className=\"sidebar-content\">\n              <h3>{selectedRegion.name}</h3>\n              <p><strong>Status:</strong> {selectedRegion.fiber_status}</p>\n              {selectedRegion.population && (\n                <p><strong>Population:</strong> {selectedRegion.population.toLocaleString()}</p>\n              )}\n              {selectedRegion.area_km2 && (\n                <p><strong>Area:</strong> {selectedRegion.area_km2.toLocaleString()} km²</p>\n              )}\n            </div>\n          ) : (\n            <div className=\"sidebar-placeholder\">\n              Click on a region on the map to see details.\n            </div>\n          )}\n\n<div className=\"legend\">\n  <h3>Legend</h3>\n  <div>\n    <span className=\"legend-color\" style={{ backgroundColor: '#4CAF50' }}></span> Active\n  </div>\n  <div>\n    <span className=\"legend-color\" style={{ backgroundColor: '#FFC107' }}></span> Planned\n  </div>\n  <div>\n    <span className=\"legend-color\" style={{ backgroundColor: '#F44336' }}></span> Unavailable\n  </div>\n</div>\n        </div>\n      </div>\n\n      <footer className=\"app-footer\">\n        <p>Namibia Fiber Coverage Mapper {new Date().getFullYear()}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}